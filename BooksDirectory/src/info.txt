Info about Redux

A working, usuable redux with react application has two distinct parts, the data portion and the view portion. The data portion contains the data used in the app. The view portion contains the views used in the app. 

For example, think of a simple book app. It shows a list of books on left side of the screen and whenever the user clicks on a particular book in that list, that clicked book appears on the right side of the screen with its book info displayed (title, author, publication year, synopsis etc). Redux is the data portion that manages the application states, such as ListOfBooks and CurrentlySelectedBook. React is the view portion that holds all the views, such as ListView, ListItem and DetailView.


Data Contained in the app (Redux)
---------------------------------
		---------------
	    |List of Books|
	    ---------------

	-------------------------
	|Currently Selected Book|
	-------------------------
---------------------------------
			|
			|
			|
			V
	---------------------		
	|Working, usable App|
	---------------------
			^
			|
			|
Views contained in the app (React)
----------------------------------
		-----------
		|List View|
		-----------
		-----------
		|List Item|
		-----------
		-------------
		|Detail View|
		-------------
-----------------------------------

A reducer is a function that returns a piece of the application state. A application can have multiple pieces of state and therefore it can have multiple reducers. 

// Application state - generated by reducers
{
	books: [{title: "The Hobbit"}, {title: "Eloquent Javascript"}], // Books reducer
	activeBook: {title: "Dune"} // ActiveBook Reducer
}

The overall app has two application states, books and activeBook. Each state is comprised of a key-value pair. For the activeBook state, the key is activeBook and the value is {title: "Dune"}. The output is the value of the reducer. For the activeBook reducer, the output value would be {title: "Dune"}.



















